name: Build for Ubuntu

# This action runs:
# - When this file changes
# - When changes on code (src, include, sql)
# - When changes on data or testing scripts (tools/testers)
# - When the way the build changes (CMakeLists.txt)
# - On request

on:
  workflow_dispatch:
  push:
    paths:
      - '.github/workflows/ubuntu.yml'
      - 'sql/**'
      - 'pgtap/**'
      - 'tools/testers/**'
      - 'CMakeLists.txt'

    branches-ignore:
      - 'gh-pages'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

env:
    vroom: 1.12.0

jobs:
  build:
    name: build
    runs-on: ubuntu-latest

    strategy:
        fail-fast: false
        matrix:
          release: [Debug, Release]
          psql: [12,13,14,15,16,17,18]
          os: [ubuntu-latest, ubuntu-22.04]

    steps:
      - uses: actions/checkout@v4

      - name: 'Raise Priority for apt.postgresql.org'
        run: |
          cat << EOF >> ./pgdg.pref
          Package: *
          Pin: release o=apt.postgresql.org
          Pin-Priority: 600
          EOF
          sudo mv ./pgdg.pref /etc/apt/preferences.d/
          sudo apt update

      - name: Add PostgreSQL APT repository
        run: |
          sudo apt-get purge postgresql-*
          sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg-testing main ${{ matrix.psql }}" > /etc/apt/sources.list.d/pgdg.list'
          curl https://www.postgresql.org/media/keys/ACCC4CF8.asc | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/apt.postgresql.org.gpg >/dev/null

      - name: Install python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          sudo apt-get update
          # vrpRouting dependencies
          sudo apt-get install -y \
            libtap-parser-sourcehandler-pgtap-perl \
            postgresql-${{ matrix.psql }} \
            postgresql-${{ matrix.psql }}-pgtap \
            postgresql-plpython3-${{ matrix.psql }} \
            postgresql-server-dev-${{ matrix.psql }}

      - name: Install Google OR-Tools
        run: |
          sudo pip install --root=/ ortools==9.10.4067

      - name: Configure
        run: |
          export PATH=/usr/lib/postgresql/${{ matrix.psql }}/bin:$PATH
          PGBIN="/usr/lib/postgresql/${{ matrix.psql }}/bin"
          PGINC="/usr/include/postgresql/${{ matrix.psql }}/server"
          mkdir build
          cd build
          cmake -DPOSTGRESQL_VERSION=${{ matrix.psql }} \
              -DCMAKE_BUILD_TYPE=${{ matrix.release }} \
              -DPostgreSQL_INCLUDE_DIR=${PGINC} -DPOSTGRESQL_BIN=${PGBIN} ..

      - name: Build
        run: |
          cd build
          make -j 4
          sudo make install

      - name: Run pgtap tests
        run: |
          sudo service postgresql start
          export PG_RUNNER_USER=`whoami`
          export PGPORT=5432
          sudo -u postgres psql -p ${PGPORT} -c "DROP DATABASE IF EXISTS \"${PG_RUNNER_USER}\";"
          sudo -u postgres psql -p ${PGPORT} -c "DROP ROLE IF EXISTS \"${PG_RUNNER_USER}\";"
          sudo -u postgres psql -p ${PGPORT} -c "CREATE ROLE \"${PG_RUNNER_USER}\" WITH LOGIN SUPERUSER;"
          sudo -u postgres psql -p ${PGPORT} -c "CREATE DATABASE \"${PG_RUNNER_USER}\";"

          bash ./tools/testers/pg_prove_tests.sh ${PG_RUNNER_USER} ${PGPORT}
